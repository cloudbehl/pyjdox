{"pydoc.TextRepr.repr_instance": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.TextRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.__init__": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.__call__": {"doc": "", "args": ["request"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Doc.fail": {"doc": "Raise an exception for unimplemented types.", "args": ["object", "name"], "type": "Method", "namespace": "pydoc.Doc", "loc": "/home/rdas/pydoc.py"}, "pydoc.writedoc": {"doc": "Write HTML documentation to a file in the current directory.", "args": ["thing", "forceload"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.showsymbol": {"doc": "", "args": ["symbol"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextRepr.repr_string": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.TextRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextRepr.repr1": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.TextRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.section": {"doc": "Format a section with a heading.", "args": ["title", "fgcol", "bgcol", "contents", "width", "prelude", "marginalia", "gap"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.writedocs": {"doc": "Write out HTML documentation for all modules in a directory tree.", "args": ["dir", "pkgpath", "done"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Doc.document": {"doc": "Generate documentation for an object.", "args": ["object", "name"], "type": "Method", "namespace": "pydoc.Doc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.getline": {"doc": "Read one line, using raw_input when available.", "args": ["prompt"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.synopsis": {"doc": "Get the one-line summary out of a module file.", "args": ["filename", "cache"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.namelink": {"doc": "Make a link for an identifier, given name-to-URL mappings.", "args": ["name"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docother": {"doc": "Produce HTML documentation for a data object.", "args": ["object", "name", "mod"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.lower": {"doc": "lower(s) -> string\n\n    Return a copy of the string s converted to lowercase.\n\n    ", "args": ["s"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.modpkglink": {"doc": "Make a link for a module or package to display in an index.", "args": ["data"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.importfile": {"doc": "Import a Python source file or compiled file given its path.", "args": ["path"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.heading": {"doc": "Format a page heading.", "args": ["title", "fgcol", "bgcol", "extras"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_str": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Doc.getdocloc": {"doc": "Return the location of module docs or None", "args": ["object"], "type": "Method", "namespace": "pydoc.Doc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.repr": {"doc": "", "args": ["object"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.formatvalue": {"doc": "Format an argument default value as text.", "args": ["object"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.__init__": {"doc": "", "args": ["input", "output"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docproperty": {"doc": "Produce html documentation for a property.", "args": ["object", "name", "mod", "cl"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docmodule": {"doc": "Produce text documentation for a given module object.", "args": ["object", "name", "mod"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docroutine": {"doc": "Produce HTML documentation for a function or method object.", "args": ["object", "name", "mod", "funcs", "classes", "methods", "cl"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.tempfilepager": {"doc": "Page through text by invoking a program on a temporary file.", "args": ["text", "cmd"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.bold": {"doc": "Format a string in bold by overstriking.", "args": ["text"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.classlink": {"doc": "Make a link for a class.", "args": ["object", "modname"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docproperty": {"doc": "Produce text documentation for a property.", "args": ["object", "name", "mod", "cl"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.extract_tb": {"doc": "Return list of up to limit pre-processed entries from traceback.\n\n    This is useful for alternate formatting of stack traces.  If\n    'limit' is omitted or None, all entries are extracted.  A\n    pre-processed stack trace entry is a quadruple (filename, line\n    number, function name, text) representing the information that is\n    usually printed for a stack trace.  The text is a string with\n    leading and trailing whitespace stripped; if the source is not\n    available it is None.\n    ", "args": ["tb", "limit"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docmodule": {"doc": "Produce HTML documentation for a module object.", "args": ["object", "name", "mod"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc._split_list": {"doc": "Split sequence s via predicate, and return pair ([true], [false]).\n\n    The return value is a 2-tuple of lists,\n        ([x for x in s if predicate(x)],\n         [x for x in s if not predicate(x)])\n    ", "args": ["s", "predicate"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc._binstr": {"doc": "", "args": ["obj"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.preformat": {"doc": "Format literal preformatted text.", "args": ["text"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr._repr_iterable": {"doc": "", "args": ["x", "level", "left", "right", "maxiter", "trail"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docclass": {"doc": "Produce HTML documentation for a class object.", "args": ["object", "name", "mod", "funcs", "classes"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.modulelink": {"doc": "Make a link for a module.", "args": ["object"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.index": {"doc": "Generate an HTML index for a directory of modules.", "args": ["dir", "shadowed"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.help": {"doc": "", "args": ["request"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.indent": {"doc": "Indent text by prepending a given prefix to each line.", "args": ["text", "prefix"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.ErrorDuringImport.__init__": {"doc": "", "args": ["filename", "exc_info"], "type": "Method", "namespace": "pydoc.ErrorDuringImport", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docroutine": {"doc": "Produce text documentation for a function or method object.", "args": ["object", "name", "mod", "cl"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.pathdirs": {"doc": "Convert sys.path into a list of absolute, existing, unique paths.", "args": [], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.split": {"doc": "split(s [,sep [,maxsplit]]) -> list of strings\n\n    Return a list of the words in the string s, using sep as the\n    delimiter string.  If maxsplit is given, splits at no more than\n    maxsplit places (resulting in at most maxsplit+1 words).  If sep\n    is not specified or is None, any whitespace string is a separator.\n\n    (split and splitfields are synonymous)\n\n    ", "args": ["s", "sep", "maxsplit"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.plain": {"doc": "Remove boldface formatting from text.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc._is_some_method": {"doc": "", "args": ["obj"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.ErrorDuringImport.__str__": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.ErrorDuringImport", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.formattree": {"doc": "Render in text a class tree as returned by inspect.getclasstree().", "args": ["tree", "modname", "parent", "prefix"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.stripid": {"doc": "Remove the hexadecimal id from a Python object representation.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.interact": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.ispackage": {"doc": "Guess whether a path refers to a package directory.", "args": ["path"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc._docdescriptor": {"doc": "", "args": ["name", "value", "mod"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.rfind": {"doc": "rfind(s, sub [,start [,end]]) -> int\n\n    Return the highest index in s where substring sub is found,\n    such that sub is contained within s[start,end].  Optional\n    arguments start and end are interpreted as in slice notation.\n\n    Return -1 on failure.\n\n    ", "args": ["s"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.rstrip": {"doc": "rstrip(s [,chars]) -> string\n\n    Return a copy of the string s with trailing whitespace removed.\n    If chars is given and not None, remove characters in chars instead.\n\n    ", "args": ["s", "chars"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_dict": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.repr": {"doc": "", "args": ["x"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.listsymbols": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_tuple": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc._encode": {"doc": "", "args": ["text", "encoding"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.docdata": {"doc": "Produce html documentation for a data descriptor.", "args": ["object", "name", "mod", "cl"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.doc": {"doc": "Display text documentation, given an object or a path to an object.", "args": ["thing", "title", "forceload"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_set": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.allmethods": {"doc": "", "args": ["cl"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_deque": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.__repr__": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_list": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.escape": {"doc": "", "args": ["text"], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.safeimport": {"doc": "Import a module; handle errors; return None if the module isn't found.\n\n    If the module *is* found but an exception occurs, it's wrapped in an\n    ErrorDuringImport exception and reraised.  Unlike __import__, if a\n    package path is specified, the module at the end of the path is returned,\n    not the package at the beginning.  If the optional 'forceload' argument\n    is 1, we reload the module from disk (unless it's a dynamic extension).", "args": ["path", "forceload", "cache"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_array": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.showtopic": {"doc": "", "args": ["topic", "more_xrefs"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.repr": {"doc": "", "args": ["object"], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.find": {"doc": "find(s, sub [,start [,end]]) -> in\n\n    Return the lowest index in s where substring sub is found,\n    such that sub is contained within s[start,end].  Optional\n    arguments start and end are interpreted as in slice notation.\n\n    Return -1 on failure.\n\n    ", "args": ["s"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.classname": {"doc": "Get a class name and qualify it with a module name if necessary.", "args": ["object", "modname"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.render_doc": {"doc": "Render text documentation, given an object or a path to an object.", "args": ["thing", "title", "forceload"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.describe": {"doc": "Produce a short description of the given thing.", "args": ["thing"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docother": {"doc": "Produce text documentation for a data object.", "args": ["object", "name", "mod", "parent", "maxlen", "doc"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.pipepager": {"doc": "Page through text by feeding it to another program.", "args": ["text", "cmd"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docclass": {"doc": "Produce text documentation for a given class object.", "args": ["object", "name", "mod"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.resolve": {"doc": "Given an object or a path to an object, get the object and its name.", "args": ["thing", "forceload"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.docdata": {"doc": "Produce text documentation for a data descriptor.", "args": ["object", "name", "mod", "cl"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.grey": {"doc": "", "args": ["text"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.ModuleScanner.run": {"doc": "", "args": ["callback", "key", "completer", "onerror"], "type": "Method", "namespace": "pydoc.ModuleScanner", "loc": "/home/rdas/pydoc.py"}, "pydoc.getpager": {"doc": "Decide what method to use for paging through text.", "args": [], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextRepr.__init__": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.TextRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_frozenset": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.expandtabs": {"doc": "expandtabs(s [,tabsize]) -> string\n\n    Return a copy of the string s with all tab characters replaced\n    by the appropriate number of spaces, depending on the current\n    column, and the tabsize (default 8).\n\n    ", "args": ["s", "tabsize"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.join": {"doc": "join(list [,sep]) -> string\n\n    Return a string composed of the words in list, with\n    intervening occurrences of sep.  The default separator is a\n    single space.\n\n    (joinfields and join are synonymous)\n\n    ", "args": ["words", "sep"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.formatvalue": {"doc": "Format an argument default value as text.", "args": ["object"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc._docdescriptor": {"doc": "", "args": ["name", "value", "mod"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.locate": {"doc": "Locate an object by name or dotted path, importing as necessary.", "args": ["path", "forceload"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.list": {"doc": "", "args": ["items", "columns", "width"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.listmodules": {"doc": "", "args": ["key"], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.getdoc": {"doc": "Get the doc string or comments for an object.", "args": ["object"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Scanner.next": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Scanner", "loc": "/home/rdas/pydoc.py"}, "pydoc.replace": {"doc": "Do a series of global replacements on a string.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.page": {"doc": "Format an HTML page.", "args": ["title", "contents"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.listtopics": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.repr_instance": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_long": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.multicolumn": {"doc": "Format a list of items into a multi-column list.", "args": ["list", "format", "cols"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.cram": {"doc": "Omit part of a string if needed to make it fit in a maximum length.", "args": ["text", "maxlen"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.cli": {"doc": "Command-line interface (looks at sys.argv to decide what to do).", "args": [], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.ttypager": {"doc": "Page through text on a text terminal.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.escape": {"doc": "", "args": ["text"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.TextDoc.section": {"doc": "Format a section with a given heading.", "args": ["title", "contents"], "type": "Method", "namespace": "pydoc.TextDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.classify_class_attrs": {"doc": "Wrap inspect.classify_class_attrs, with fixup for data descriptors.", "args": ["object"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.bigsection": {"doc": "Format a section with a big heading.", "args": ["title"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.gui": {"doc": "Graphical interface (starts web server and pops up a control window).", "args": [], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.plainpager": {"doc": "Simply print unformatted text.  This is the ultimate fallback.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.repr_string": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.serve": {"doc": "", "args": ["port", "callback", "completer"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.source_synopsis": {"doc": "", "args": ["file"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.pager": {"doc": "The first time this is called, determine what kind of pager to use.", "args": ["text"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.strip": {"doc": "strip(s [,chars]) -> string\n\n    Return a copy of the string s with leading and trailing\n    whitespace removed.\n    If chars is given and not None, remove characters in chars instead.\n    If chars is unicode, S will be converted to unicode before stripping.\n\n    ", "args": ["s", "chars"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.apropos": {"doc": "Print all the one-line module summaries that contain a substring.", "args": ["key"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.listkeywords": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Helper.intro": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Helper", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr": {"doc": "", "args": ["x"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Scanner.__init__": {"doc": "", "args": ["roots", "children", "descendp"], "type": "Method", "namespace": "pydoc.Scanner", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.formattree": {"doc": "Produce HTML for a class tree as given by inspect.getclasstree().", "args": ["tree", "modname", "parent"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLDoc.markup": {"doc": "Mark up some plain text, given a context of symbols to look for.\n        Each context dictionary maps object names to anchor names.", "args": ["text", "escape", "funcs", "classes", "methods"], "type": "Method", "namespace": "pydoc.HTMLDoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.__init__": {"doc": "", "args": [], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.splitdoc": {"doc": "Split a doc string into a synopsis line (if any) and the rest.", "args": ["doc"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.visiblename": {"doc": "Decide whether to show documentation on a variable.", "args": ["name", "all", "obj"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr_instance": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.HTMLRepr.repr1": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.HTMLRepr", "loc": "/home/rdas/pydoc.py"}, "pydoc.Repr.repr1": {"doc": "", "args": ["x", "level"], "type": "Method", "namespace": "pydoc.Repr", "loc": "/home/rdas/pydoc.py"}, "pydoc.isdata": {"doc": "Check if an object is of a type that probably means it's data.", "args": ["object"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}, "pydoc.ispath": {"doc": "", "args": ["x"], "type": "Function", "namespace": "pydoc", "loc": "/home/rdas/pydoc.py"}}